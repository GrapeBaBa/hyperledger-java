/*
 * Copyright 2016 281165273@qq.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

description = 'A java client SDK for hyperledger project'


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.netflix.nebula:nebula-project-plugin:3.1.0'
        classpath 'com.netflix.nebula:nebula-release-plugin:4.0.1'
        classpath 'com.netflix.nebula:nebula-bintray-plugin:3.3.4'
        classpath "nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0"
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'java'
    apply plugin: 'nebula.project'
    apply plugin: 'nebula.nebula-bintray'
    apply plugin: 'nebula.nebula-release'
    apply plugin: "com.github.hierynomus.license"

    group 'me.grapebaba'

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    license {
        header rootProject.file('LICENSE')
    }

    bintray {
        pkg {
            repo = 'maven'
            userOrg = 'grapebaba'
            websiteUrl = 'https://github.com/GrapeBaBa/hyperledger-java'
            issueTrackerUrl = 'https://github.com/GrapeBaBa/hyperledger-java/issues'
            vcsUrl = 'https://github.com/GrapeBaBa/hyperledger-java.git'
            labels = ['hyperledger', 'java']
        }


    }

    publishing {
        publications {
            nebula(MavenPublication) {
                pom.withXml {
                    configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
                        asNode().dependencies[0].dependency.find {
                            it.artifactId[0].text() == dep.moduleName &&
                                    it.groupId[0].text() == dep.moduleGroup
                        }?.scope[0]?.value = 'compile'
                    }
                }
            }
        }
    }

    gradle.taskGraph.whenReady { graph ->
        if (graph.hasTask(":snapshot") || graph.hasTask(":devSnapshot")) {
            bintrayUpload.enabled = false
            artifactoryPublish.enabled = true
        }

        if (graph.hasTask(":final") || graph.hasTask(":candidate")) {
            bintrayUpload.enabled = true
            artifactoryPublish.enabled = false
        }
    }
}

configure(subprojects) {
    dependencies {
        testCompile('junit:junit:4.12')
    }

    repositories {
        jcenter()
    }

}

contacts {
    '281165273@qq.com' {
        moniker 'Kai Chen'
        github 'Grapebaba'
        roles 'owner', 'notify'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

